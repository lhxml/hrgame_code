final方法
将方法声明为final，那就说明你已经知道这个方法提供的功能已经满足你要求，
不需要进行扩展，并且也不允许任何从此类继承的类来覆写这个方法，但是继承
仍然可以继承这个方法，也就是说可以直接使用。另外有一种被称为inline的机
制，它会使你在调用final方法时，直接将方法主体插入到调用处，而不是进行例
行的方法调用，例如保存断点，压栈等，这样可能会使你的程序效率有所提高，然
而当你的方法主体非常庞大时，或你在多处调用此方法，那么你的调用主体代码便
会迅速膨胀，可能反而会影响效率，所以你要慎用final进行方法定义。

final类
当你将final用于类身上时，你就需要仔细考虑，因为一个final类是无法被任何人继
承的，那也就意味着此类在一个继承树中是一个叶子类，并且此类的设计已被认为很
完美而不需要进行修改或扩展。对于final类中的成员，你可以定义其为final，也可
以不是final。而对于方法，由于所属类为final的关系，自然也就成了final型的。你
也可以明确的给final类中的方法加上一个final，但这显然没有意义。